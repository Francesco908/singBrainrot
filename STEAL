-- Sing Hub Advanced Auto Farm Script
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local ProximityPromptService = game:GetService("ProximityPromptService")
local UserInputService = game:GetService("UserInputService")

-- Variables
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")
local camera = Workspace.CurrentCamera

-- Control variables
local autoFarmMoneyEnabled = false
local autoBuyEggsEnabled = false
local autoGameEnabled = false
local espEnabled = false
local fastOpenEnabled = false
local originalWalkSpeed = humanoid.WalkSpeed
local farmConnection
local buyConnection
local gameConnection
local espBoxes = {}

-- ESP Functions
local function createESPBox(obj, color, text)
    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Name = "ESPBox"
    billboardGui.Size = UDim2.new(0, 100, 0, 50)
    billboardGui.StudsOffset = Vector3.new(0, 2, 0)
    billboardGui.AlwaysOnTop = true
    billboardGui.Parent = obj
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundColor3 = color
    frame.BackgroundTransparency = 0.7
    frame.BorderSizePixel = 2
    frame.BorderColor3 = color
    frame.Parent = billboardGui
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = text
    textLabel.TextColor3 = Color3.new(1, 1, 1)
    textLabel.TextScaled = true
    textLabel.Font = Enum.Font.SourceSansBold
    textLabel.Parent = frame
    
    table.insert(espBoxes, billboardGui)
    return billboardGui
end

local function clearESP()
    for _, box in pairs(espBoxes) do
        if box and box.Parent then
            box:Destroy()
        end
    end
    espBoxes = {}
end

local function updateESP()
    if not espEnabled then return end
    
    clearESP()
    
    -- ESP for Items
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj.Name:match("^Item%d*$") then
            createESPBox(obj, Color3.new(0, 1, 0), "ITEM")
        elseif obj.Name:match("^Egg%d*$") then
            createESPBox(obj, Color3.new(1, 1, 0), "EGG")
        elseif obj.Name:lower():find("money") then
            createESPBox(obj, Color3.new(0, 0, 1), "MONEY")
        end
    end
end

-- Function to find items for money farming
local function findItems()
    local items = {}
    
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj.Name:match("^Item%d*$") then -- Find Item, Item1, Item2, etc.
            table.insert(items, obj)
        end
    end
    
    return items
end

-- Function to find eggs for buying
local function findEggs()
    local eggs = {}
    
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj.Name:match("^Egg%d*$") then -- Find Egg, Egg1, Egg2, etc.
            table.insert(eggs, obj)
        end
    end
    
    return eggs
end

-- Function to find money objects
local function findMoney()
    local money = {}
    
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj.Name:lower():find("money") or obj.Name:lower():find("cash") or obj.Name:lower():find("coin") then
            table.insert(money, obj)
        end
    end
    
    return money
end

-- Function to walk to object
local function walkToObject(targetObject)
    if not targetObject or not targetObject.Parent then return false end
    
    local targetPosition
    if targetObject:IsA("Model") then
        local primaryPart = targetObject.PrimaryPart or targetObject:FindFirstChild("HumanoidRootPart") or targetObject:FindFirstChildOfClass("BasePart")
        if primaryPart then
            targetPosition = primaryPart.Position
        else
            targetPosition = targetObject:GetModelCFrame().Position
        end
    elseif targetObject:IsA("BasePart") then
        targetPosition = targetObject.Position
    else
        return false
    end
    
    -- Update character and humanoid if necessary
    if not character or not character.Parent then
        character = player.Character
        if not character then return false end
        humanoid = character:FindFirstChild("Humanoid")
        rootPart = character:FindFirstChild("HumanoidRootPart")
    end
    
    if humanoid and rootPart then
        humanoid:MoveTo(targetPosition)
        return true
    end
    
    return false
end

-- Function to click on object (for proximity prompts)
local function clickObject(targetObject)
    if not targetObject then return false end
    
    local prompt = targetObject:FindFirstChildOfClass("ProximityPrompt")
    if not prompt then
        for _, child in pairs(targetObject:GetDescendants()) do
            if child:IsA("ProximityPrompt") then
                prompt = child
                break
            end
        end
    end
    
    if prompt then
        prompt:InputHoldBegin()
        wait(prompt.HoldDuration or 0)
        prompt:InputHoldEnd()
        return true
    end
    
    return false
end

-- Function to modify ProximityPrompts
local function modifyProximityPrompts()
    for _, prompt in pairs(game:GetDescendants()) do
        if prompt:IsA("ProximityPrompt") then
            prompt.HoldDuration = 0
        end
    end
end

-- Auto Farm Money function
local function autoFarmMoney()
    if not autoFarmMoneyEnabled then return end
    
    local items = findItems()
    
    if #items > 0 then
        -- Find closest item
        local closestItem = nil
        local closestDistance = math.huge
        
        for _, item in pairs(items) do
            if item and item.Parent then
                local itemPos = item:IsA("Model") and item:GetModelCFrame().Position or item.Position
                local distance = (rootPart.Position - itemPos).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestItem = item
                end
            end
        end
        
        -- Walk to closest item
        if closestItem then
            walkToObject(closestItem)
        end
    end
end

-- Auto Buy Eggs function
local function autoBuyEggs()
    if not autoBuyEggsEnabled then return end
    
    local eggs = findEggs()
    
    if #eggs > 0 then
        -- Find closest egg
        local closestEgg = nil
        local closestDistance = math.huge
        
        for _, egg in pairs(eggs) do
            if egg and egg.Parent then
                local eggPos = egg:IsA("Model") and egg:GetModelCFrame().Position or egg.Position
                local distance = (rootPart.Position - eggPos).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestEgg = egg
                end
            end
        end
        
        -- Walk to and click closest egg
        if closestEgg then
            walkToObject(closestEgg)
            wait(0.5) -- Wait to reach the egg
            clickObject(closestEgg)
        end
    end
end

-- Auto Game function (analyzes and collects money)
local function autoGame()
    if not autoGameEnabled then return end
    
    local money = findMoney()
    
    if #money > 0 then
        -- Find closest money
        local closestMoney = nil
        local closestDistance = math.huge
        
        for _, moneyObj in pairs(money) do
            if moneyObj and moneyObj.Parent then
                local moneyPos = moneyObj:IsA("Model") and moneyObj:GetModelCFrame().Position or moneyObj.Position
                local distance = (rootPart.Position - moneyPos).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestMoney = moneyObj
                end
            end
        end
        
        -- Walk to closest money
        if closestMoney then
            walkToObject(closestMoney)
        end
    end
end

-- Create Rayfield interface
local Window = Rayfield:CreateWindow({
    Name = "Sing Hub",
    LoadingTitle = "Sing Hub Loading",
    LoadingSubtitle = "Advanced Auto Farm Script",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "SingHubConfig",
        FileName = "Config"
    },
    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },
    KeySystem = false
})

-- Main tab
local MainTab = Window:CreateTab("🎮 Main", 4483362458)

-- Auto Farm Money toggle
local AutoFarmMoneyToggle = MainTab:CreateToggle({
    Name = "Auto Farm Money (Items)",
    CurrentValue = false,
    Flag = "AutoFarmMoneyToggle",
    Callback = function(Value)
        autoFarmMoneyEnabled = Value
        
        if Value then
            if humanoid then
                humanoid.WalkSpeed = 50
            end
            
            farmConnection = RunService.Heartbeat:Connect(autoFarmMoney)
            
            Rayfield:Notify({
                Title = "Auto Farm Money",
                Content = "Auto Farm Money enabled!",
                Duration = 3,
                Image = 4483362458
            })
        else
            if humanoid then
                humanoid.WalkSpeed = originalWalkSpeed
            end
            
            if farmConnection then
                farmConnection:Disconnect()
                farmConnection = nil
            end
            
            Rayfield:Notify({
                Title = "Auto Farm Money",
                Content = "Auto Farm Money disabled!",
                Duration = 3,
                Image = 4483362458
            })
        end
    end
})

-- Auto Buy Eggs toggle
local AutoBuyEggsToggle = MainTab:CreateToggle({
    Name = "Auto Buy Eggs",
    CurrentValue = false,
    Flag = "AutoBuyEggsToggle",
    Callback = function(Value)
        autoBuyEggsEnabled = Value
        
        if Value then
            if humanoid then
                humanoid.WalkSpeed = 50
            end
            
            buyConnection = RunService.Heartbeat:Connect(autoBuyEggs)
            
            Rayfield:Notify({
                Title = "Auto Buy Eggs",
                Content = "Auto Buy Eggs enabled!",
                Duration = 3,
                Image = 4483362458
            })
        else
            if humanoid then
                humanoid.WalkSpeed = originalWalkSpeed
            end
            
            if buyConnection then
                buyConnection:Disconnect()
                buyConnection = nil
            end
            
            Rayfield:Notify({
                Title = "Auto Buy Eggs",
                Content = "Auto Buy Eggs disabled!",
                Duration = 3,
                Image = 4483362458
            })
        end
    end
})

-- Auto Game toggle
local AutoGameToggle = MainTab:CreateToggle({
    Name = "Auto Game (Smart Money Detection)",
    CurrentValue = false,
    Flag = "AutoGameToggle",
    Callback = function(Value)
        autoGameEnabled = Value
        
        if Value then
            if humanoid then
                humanoid.WalkSpeed = 50
            end
            
            gameConnection = RunService.Heartbeat:Connect(autoGame)
            
            Rayfield:Notify({
                Title = "Auto Game",
                Content = "Auto Game enabled!",
                Duration = 3,
                Image = 4483362458
            })
        else
            if humanoid then
                humanoid.WalkSpeed = originalWalkSpeed
            end
            
            if gameConnection then
                gameConnection:Disconnect()
                gameConnection = nil
            end
            
            Rayfield:Notify({
                Title = "Auto Game",
                Content = "Auto Game disabled!",
                Duration = 3,
                Image = 4483362458
            })
        end
    end
})

-- Walk speed slider
local WalkSpeedSlider = MainTab:CreateSlider({
    Name = "Walk Speed",
    Range = {16, 100},
    Increment = 1,
    Suffix = " Speed",
    CurrentValue = 50,
    Flag = "WalkSpeedSlider",
    Callback = function(Value)
        if humanoid then
            humanoid.WalkSpeed = Value
        end
    end
})

-- ESP tab
local ESPTab = Window:CreateTab("👁️ ESP", 4483362458)

-- ESP toggle
local ESPToggle = ESPTab:CreateToggle({
    Name = "ESP Boxes",
    CurrentValue = false,
    Flag = "ESPToggle",
    Callback = function(Value)
        espEnabled = Value
        
        if Value then
            updateESP()
            
            -- Update ESP periodically
            spawn(function()
                while espEnabled do
                    updateESP()
                    wait(2)
                end
            end)
            
            Rayfield:Notify({
                Title = "ESP",
                Content = "ESP Boxes enabled!",
                Duration = 3,
                Image = 4483362458
            })
        else
            clearESP()
            
            Rayfield:Notify({
                Title = "ESP",
                Content = "ESP Boxes disabled!",
                Duration = 3,
                Image = 4483362458
            })
        end
    end
})

-- Manual ESP update button
local UpdateESPButton = ESPTab:CreateButton({
    Name = "Update ESP",
    Callback = function()
        updateESP()
        Rayfield:Notify({
            Title = "ESP",
            Content = "ESP updated!",
            Duration = 2,
            Image = 4483362458
        })
    end
})

-- Settings tab
local SettingsTab = Window:CreateTab("⚙️ Settings", 4483362458)

-- Fast Open toggle
local FastOpenToggle = SettingsTab:CreateToggle({
    Name = "Fast Open (Proximity Prompts)",
    CurrentValue = false,
    Flag = "FastOpenToggle",
    Callback = function(Value)
        fastOpenEnabled = Value
        
        if Value then
            modifyProximityPrompts()
            
            -- Listen for new proximity prompts
            ProximityPromptService.PromptButtonHoldBegan:Connect(function(prompt)
                if fastOpenEnabled then
                    prompt.HoldDuration = 0
                end
            end)
            
            Rayfield:Notify({
                Title = "Fast Open",
                Content = "Fast Open enabled!",
                Duration = 3,
                Image = 4483362458
            })
        else
            Rayfield:Notify({
                Title = "Fast Open",
                Content = "Fast Open disabled!",
                Duration = 3,
                Image = 4483362458
            })
        end
    end
})

-- Apply fast open to all prompts button
local ApplyFastOpenButton = SettingsTab:CreateButton({
    Name = "Apply Fast Open to All Prompts",
    Callback = function()
        modifyProximityPrompts()
        Rayfield:Notify({
            Title = "Fast Open",
            Content = "Applied to all proximity prompts!",
            Duration = 3,
            Image = 4483362458
        })
    end
})

-- Analyze game button
local AnalyzeButton = SettingsTab:CreateButton({
    Name = "Analyze Game Objects",
    Callback = function()
        local items = findItems()
        local eggs = findEggs()
        local money = findMoney()
        
        Rayfield:Notify({
            Title = "Game Analysis",
            Content = "Items: " .. #items .. " | Eggs: " .. #eggs .. " | Money: " .. #money,
            Duration = 5,
            Image = 4483362458
        })
    end
})

-- Character reconnection handling
player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    humanoid = character:WaitForChild("Humanoid")
    rootPart = character:WaitForChild("HumanoidRootPart")
    
    -- Reapply settings if necessary
    if autoFarmMoneyEnabled or autoBuyEggsEnabled or autoGameEnabled then
        humanoid.WalkSpeed = WalkSpeedSlider.CurrentValue or 50
    end
end)

-- Loading complete notification
Rayfield:Notify({
    Title = "Sing Hub",
    Content = "Advanced script loaded successfully!",
    Duration = 5,
    Image = 4483362458
})

print("Sing Hub Advanced Auto Farm Script loaded successfully!")
